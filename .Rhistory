library(shiny)
library(ggvis)
runApp('C:/Users/ASUS/Desktop/SDM/Class 3/My-App')
shinyUI(fluidPage(
# Application title
titlePanel("My Simple App"),
# Sidebar with a slider input for the range of x-values and y-values
sidebarLayout(
sidebarPanel(
sliderInput("sqft", "Range of SqFt",min = 1450,max = 2590,value = c(1500,2500)),
sliderInput("price", "Range of Price",min = 69100,max = 211200,value = c(70000,210000))
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("Plot")
)
)
))
runApp('C:/Users/ASUS/Desktop/SDM/Class 3/My-App')
runApp('C:/Users/ASUS/Desktop/SDM/Class 3/My-App')
source('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R', echo=TRUE)
source('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R', echo=TRUE)
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
library(shiny); runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a Number",
value = 25, min = 1, max = 100),
textInput(inputId = "title",
label = "Write a label",
value = "Histogram of Random normal Values"),
plotOutput("hist"),
verbatimTextOutput("stats")
)
server <- function(input, output){
data <- reactive({
rnorm(input$num)
})
output$hist <- renderPlot({
hist(data(),
main = data())
})
output$stats <- renderPrint({
summary(data())
})
}
shinyApp(ui = ui, server = server)
runApp('C:/Users/ASUS/Desktop/SDM/R Learning/R Apps/ui.R')
runApp('C:/Users/ASUS/Desktop/SDM/Project/How-to-start-2_2/How-to-start-2/code/01-two-inputs.R')
runApp('C:/Users/ASUS/Desktop/SDM/Project/How-to-start-2_2/How-to-start-2/code/01-two-inputs.R')
runApp('C:/Users/ASUS/Desktop/SDM/Project/How-to-start-2_2/How-to-start-2/code/01-two-inputs.R')
shiny::runApp('C:/Users/ASUS/Desktop/SDM/Project/Dash Board App/App/App')
